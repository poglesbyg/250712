FROM node:18-alpine AS base

# Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat git
WORKDIR /app

# Copy package files
COPY backend/package.json ./
RUN npm install

# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY backend/ .

# Build TypeScript
RUN npm run build

# Production stage
FROM base AS runner
WORKDIR /app

# Install git for repository analysis
RUN apk add --no-cache git

ENV NODE_ENV production

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nodejs

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/package.json ./

# Install only production dependencies
RUN npm install --only=production && npm cache clean --force

USER nodejs

EXPOSE 3002

CMD ["node", "dist/index.js"] 